{"version":3,"file":"static/js/835.557903db.chunk.js","mappings":"sPAEaA,EAAcC,EAAAA,GAAAA,GAAH,oQAaXC,EAAWD,EAAAA,GAAAA,GAAH,+HAORE,EAAWF,EAAAA,GAAAA,GAAH,6DAKRG,EAAQH,EAAAA,GAAAA,EAAH,sGAOLI,EAAWJ,EAAAA,GAAAA,KAAH,iE,2BCrBN,SAASK,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,SAEPE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAkBH,GACjBI,MAAK,SAAAC,GAAQ,OAAIN,EAASM,EAASC,WACnC,CAACN,IAEJ,IAAMO,EAAa,SAAAC,GACjB,OAAqB,OAAjBA,EACI,GAAN,OAAUC,GAEN,kCAAN,OAAyCD,IAG3C,OACE,iCACE,SAAC,KAAD,IACCV,IACC,SAACR,EAAD,UACGQ,EAAMY,KAAI,gBAAEC,EAAF,EAAEA,GAAIH,EAAN,EAAMA,aAAcI,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,UAA1B,OACT,UAACrB,EAAD,YACE,gBACEsB,IAAG,UAAKP,EAAWC,IACnBO,IAAKH,EACLI,MAAM,SAER,SAACvB,EAAD,UAAWmB,KACX,UAAClB,EAAD,WACG,IADH,gBAEc,UAACC,EAAD,WACT,IACAkB,EAAW,OACF,SAZDF,a,uNChCdM,EAAY1B,EAAAA,GAAAA,IAAH,iJAQT2B,EAAY3B,EAAAA,GAAAA,IAAH,sGAOT4B,EAAkB5B,EAAAA,GAAAA,IAAH,ycAuBf6B,GAAY7B,EAAAA,EAAAA,IAAO8B,EAAAA,GAAP9B,CAAH,uTAgBT+B,EAAU/B,EAAAA,GAAAA,GAAH,2CAIPgC,EAAUhC,EAAAA,GAAAA,GAAH,4C,oLC7DdiC,EAAU,mCACVC,EAAW,+BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA2BC,EAA3B,+BAAiC,GAAIC,EAArC,+BAA8C,GAA9C,SACyBC,MAAMF,EAAKC,GADpC,YACQvB,EADR,QAEkByB,GAFlB,iCAGYzB,EAAS0B,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOT,EAAY,GAAD,OACbD,EADa,uCAC0BD,IAIvC,SAASY,EAAgBC,GAC9B,OAAOX,EAAY,GAAD,OACbD,EADa,+BACkBY,EADlB,oBACmCb,EADnC,+CAKb,SAASc,EAAWtC,GACzB,OAAO0B,EAAY,GAAD,OACbD,EADa,kBACKzB,EADL,oBACwBwB,IAIrC,SAASe,EAAQvC,GACtB,OAAO0B,EAAY,GAAD,OACbD,EADa,kBACKzB,EADL,4BACgCwB,IAI7C,SAASgB,EAAWxC,GACzB,OAAO0B,EAAY,GAAD,OACbD,EADa,kBACKzB,EADL,4BACgCwB,EADhC,c","sources":["pages/Cast/Cast.styled.js","pages/Cast/Cast.js","pages/MovieDetails/MovieDetails.styled.js","services/movies-api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastGallery = styled.ul`\ndisplay: grid;\nmax-width: calc(100vw - 48px);\ngrid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\ngrid-gap: 16px;\nmargin-top: 0;\nmargin-bottom: 0;\npadding: 0;\nlist-style: none;\nmargin-left: auto;\nmargin-right: auto;\n`;\n\nexport const CastCard = styled.li`\n  border-radius: 10px;\n  padding: 35px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px 1px #7bd4eb;\n`;\n\nexport const CastName = styled.h3`\nfont-weight: bold;\ncolor: #de14b9;\n`;\n\nexport const CastP = styled.p`\ndisplay: flex;\nflex-direction: column;\nfont-weight: bold;\ncolor: #7bd4eb;\n`;\n\nexport const CastSpan = styled.span`\n  font-weight: bold;\n  color: #7bd4eb;\n`;\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport * as moviesApi from '../../services/movies-api';\nimport {\n  CastGallery,\n  CastCard,\n  CastName,\n  CastP,\n  CastSpan,\n} from './Cast.styled';\nimport defaultImg from '../../components/Images/defaultImg.jpg';\nimport {MovieHorizontal} from '../MovieDetails/MovieDetails.styled';\n\nexport default function Cast() {\n  const [casts, setCasts] = useState(null);\n  const {movieId} = useParams();\n\n  useEffect(() => {\n    moviesApi.getCast(movieId)\n    .then(response => setCasts(response.cast));\n  }, [movieId]);\n\n  const viewPoster = profile_path => {\n    if (profile_path === null) {\n      return `${defaultImg}`;\n    }\n    return `https://image.tmdb.org/t/p/w300${profile_path}`;\n  };\n\n  return (\n    <>\n      <MovieHorizontal />\n      {casts && (\n        <CastGallery>\n          {casts.map(({id, profile_path, name, character}) => (\n            <CastCard key={id}>\n              <img\n                src={`${viewPoster(profile_path) }`}\n                alt={name}\n                width='300'\n              />\n              <CastName>{name}</CastName>\n              <CastP>\n                {' '}\n                Character : <CastSpan>\n                  {' '}\n                  {character}{' '}\n                </CastSpan>{' '}\n              </CastP>\n            </CastCard>\n          ))}\n        </CastGallery>\n      )\n      }\n    </>\n  )\n}\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const MovieCard = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px 1px #7bd4eb;\n`;\n\nexport const MovieInfo = styled.div`\n  display: block;\n  padding: 15px;\n  margin-left: 20px;\n  color: #7bd4eb;\n`;\n\nexport const MovieHorizontal = styled.div`\n  width: auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px;\n  margin-top: 0;\n  margin-bottom: 20px;\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 10px;\n  text-align: center;\n  box-shadow: 0 0 10px 1px #7bd4eb;\n  background-image: repeating-linear-gradient(\n    -45deg,\n    #7bd4eb,\n    #7bd4eb 15px,\n    #fcfcfc 15px,\n    #fcfcfc 30px\n  );\n`;\n\nexport const MovieLink = styled(NavLink)`\n  display: inline-block;\n  text-decoration: none;\n  color: #7bd4eb;\n  font-size: 25px;\n  font-weight: 500;\n  margin: 10px;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px 1px #7bd4eb;\n  &.active {\n    color: #de14b9;\n    box-shadow: 0 0 13px 3px #de14b9;\n  }\n`;\n\nexport const MovieH2 = styled.h2`\n  color: #7bd4eb;\n`;\n\nexport const MovieH3 = styled.h3`\n  color: #7bd4eb;\n`;\n","const API_KEY = 'ccff67b17da8d42d9549aa2bea27fbb2';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n};\n\nexport function getTrending() {\n  return fetchMovies(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n};\n\nexport function getMoviesSearch(query) {\n  return fetchMovies(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  )\n};\n\nexport function getMovieId(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  )\n};\n\nexport function getCast(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  )\n};\n\nexport function getReviews(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n  )\n};\n"],"names":["CastGallery","styled","CastCard","CastName","CastP","CastSpan","Cast","useState","casts","setCasts","movieId","useParams","useEffect","moviesApi","then","response","cast","viewPoster","profile_path","defaultImg","map","id","name","character","src","alt","width","MovieCard","MovieInfo","MovieHorizontal","MovieLink","NavLink","MovieH2","MovieH3","API_KEY","BASE_URL","fetchMovies","url","config","fetch","ok","json","Promise","reject","Error","getTrending","getMoviesSearch","query","getMovieId","getCast","getReviews"],"sourceRoot":""}